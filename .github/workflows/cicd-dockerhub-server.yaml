name: ci-cd-server

on:
  push:
    branches:
      - main

# TODO
permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-20.04

    #
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      #
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      #
      - name: Build with Gradle
        env:
          DISDONG_USERNAME: ${{ secrets.DISDONG_USERNAME }}
          DISDONG_TOKEN: ${{ secrets.DISDONG_TOKEN }}
        run: ./gradlew clean build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/knitting-server:${{ env.IMAGE_TAG }}
          context: ./knitting-server

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PEM }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

            docker image prune -af

            docker pull ${{ secrets.DOCKERHUB_USER }}/knitting-server:${{ env.IMAGE_TAG }}

            rm -f server.sh
            touch server.sh

            echo "docker kill knitting-server 2>/dev/null" >> server.sh
            echo "docker rm knitting-server 2>/dev/null" >> server.sh
            echo docker run --name knitting-server --rm -d -p 80:8080 \
              -v /home/ubuntu:/usr/bin/app/keys \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e KAKAO_OAUTH_V1_REDIRECT_URI=${{ secrets.KAKAO_OAUTH_V1_REDIRECT_URI }} \
              -e KAKAO_OAUTH_V1_CLIENT_ID=${{ secrets.KAKAO_OAUTH_V1_CLIENT_ID }} \
              -e KAKAO_OAUTH_V1_LOGOUT_REDIRECT_URI=${{ secrets.KAKAO_OAUTH_V1_LOGOUT_REDIRECT_URI }} \
              -e KAKAO_OAUTH_V2_REDIRECT_URI=${{ secrets.KAKAO_OAUTH_V2_REDIRECT_URI }} \
              -e KAKAO_OAUTH_V2_CLIENT_ID=${{ secrets.KAKAO_OAUTH_V2_CLIENT_ID }} \
              -e JWT_SECRETKEY=${{ secrets.JWT_SECRETKEY }} \
              -e GOOGLE_APPLICATION_CREDENTIALS=/usr/bin/app/keys/credential.json \
              --log-driver=syslog \
              ${{ secrets.DOCKERHUB_USER }}/knitting-server:${{ env.IMAGE_TAG }} >> server.sh

            bash server.sh
