name: ci

on:
  push:
    branches:
      - ecr

# TODO
permissions:
  id-token: write
  contents: read

env:
  AWS_ECR_REPOSITORY: image-registry
  IMAGE_TAG: ${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-20.04

    #
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      #
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      #
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # TODO
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      #
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      #
      - name: Build, tag, and push docker image to Amazon ECR
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ AWS_ECR_REPOSITORY }}:{{ $IMAGE_TAG }} ./knitting-server
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ AWS_ECR_REPOSITORY }}:${{ IMAGE_TAG }}

  # cd 시, pull 받기가 dockerhub 보다 힘듭니다.
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PEM }}
          script: |
